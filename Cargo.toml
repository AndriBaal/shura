[package]
name = "shura"
version = "0.7.0"
edition = "2021"
repository = "https://github.com/AndriBaal/shura"
documentation = "https://docs.rs/shura"
readme = "README.md"
license = "Apache-2.0"
description = "A fast cross-plattform 2D component-based game framework"
keywords = ["graphics", "physics", "game", "android", "wasm"]
categories = [
    "wasm",
    "rendering",
    "graphics",
    "game-engines",
    "game-development",
]
exclude = ["docs", "macro", "template"]

[features]
animation = []
framebuffer = []
gamepad = ["dep:gilrs"]
text = ["dep:rusttype", "dep:owned_ttf_parser"]
audio = ["dep:rodio"]
physics = ["dep:rapier2d"]
# gui = ["dep:egui", "dep:egui-wgpu", "dep:egui-winit"]
log = ["dep:log", "dep:env_logger"]
rayon = ["dep:rayon", "shura_proc/rayon"]
serde = [
    "dep:serde",
    "dep:bincode",
    "wgpu/trace",
    "wgpu/serde",
    "wgpu/replay",
    "winit/serde",
    "gilrs?/serde-serialize",
    # "egui?/serde",
    "nalgebra/serde-serialize",
    "rapier2d?/serde-serialize",
]
default = [
    "animation",
    "gamepad",
    "text",
    "audio",
    "physics",
    "serde",
    # "gui",
    "log",
    "rayon",
    "framebuffer",
]

[lib]
crate-type = ["lib", "cdylib"]

[dev-dependencies]
egui_demo_lib = "0.25"

[dependencies]
winit = { version = "0.29", features = ["mint"] }
wgpu = { version = "0.19", features = ["glsl", "spirv", "webgl"] }
anyhow = "1.0"
env_logger = { version = "0.10", optional = true }
tobj = { version = "4.0", features = ["async"] }
delaunator = "1"
rayon = { version = "1.7", optional = true }
mint = { version = "0.5" }
nalgebra = { version = "0.32", features = ["convert-bytemuck", "mint"] }
rusttype = { version = "0.9", optional = true }
owned_ttf_parser = { version = "0.15", optional = true }
gilrs = { version = "0.10", optional = true }
# egui-wgpu = { version = "0.25", features = ["winit"], optional = true }
# egui = { version = "0.25", default-features = false, optional = true, features = [
#     "bytemuck",
#     "default_fonts",
#     "mint",
# ] }
rapier2d = { version = "0.17", optional = true }
log = { version = "0.4", optional = true, features = ["std"] }
downcast-rs = "1.2.0"
rustc-hash = "1.1"
futures-intrusive = "0.5.0"
pollster = "0.3.0"
bytemuck = { version = "1.14", features = ["derive"] }
instant = "0.1.12"
shura_proc = { path = "./macro" }
image = { version = "0.24", default-features = false, features = [
    "png",
    "jpeg",
] }
serde = { version = "1", features = ["derive"], optional = true }
bincode = { version = "1.3.3", optional = true }
rand = "0.8.5"
rodio = { version = "0.17", default-features = false, optional = true, features = [
    "symphonia-all",
] }
# egui-winit = { version = "0.25", features = [
#     "links",
# ], default-features = false, optional = true }

[target.'cfg(target_arch = "wasm32")'.dependencies]
reqwest = "0.11"
wasm-bindgen-futures = "0.4"
getrandom = { version = "0.2", features = ["js"] }
console_error_panic_hook = "0.1"
web-sys = { version = "0.3", features = [
    "Document",
    "Window",
    "Element",
    "console",
    "Clipboard",
    "Location",
] }


[target.'cfg(target_arch = "wasm32")'.dependencies.wgpu]
features = ["fragile-send-sync-non-atomic-wasm"]
version = "0.19"

[target.'cfg(target_arch = "wasm32")'.dependencies.rodio]
features = ["symphonia-all", "wasm-bindgen"]
version = "0.17"

# [target.'cfg(not(target_arch = "wasm32"))'.dependencies.egui-winit]
# features = ["arboard", "webbrowser"]
# default-features = true
# version = "0.25"

[target.'cfg(target_os = "android")'.dependencies.winit]
features = ["android-native-activity"]
version = "0.29"
